<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Godoc.orgs on 中文期望</title>
    <link>https://bwaycer.github.io/zhpect/godoc.org/</link>
    <description>Recent content in Godoc.orgs on 中文期望</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 19 Apr 2019 17:16:21 +0800</lastBuildDate>
    
	<atom:link href="https://bwaycer.github.io/zhpect/godoc.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>websocket - GoDoc</title>
      <link>https://bwaycer.github.io/zhpect/godoc.org/github.com/gorilla/websocket/</link>
      <pubDate>Fri, 19 Apr 2019 17:16:21 +0800</pubDate>
      
      <guid>https://bwaycer.github.io/zhpect/godoc.org/github.com/gorilla/websocket/</guid>
      <description>websocket:  github.com/gorilla/websocket Index | Examples | Files | Directories   package websocket import &#34;github.com/gorilla/websocket&#34;
Package websocket implements the WebSocket protocol defined in RFC 6455.
Overview &amp;para  The Conn type represents a WebSocket connection. A server application calls the Upgrader.Upgrade method from an HTTP request handler to get a *Conn: var upgrader = websocket.Upgrader{ ReadBufferSize: 1024, WriteBufferSize: 1024, } func handler(w http.ResponseWriter, r *http.Request) { conn, err := upgrader.</description>
    </item>
    
    <item>
      <title>net - GoDoc</title>
      <link>https://bwaycer.github.io/zhpect/godoc.org/golang.org/x/net/</link>
      <pubDate>Thu, 18 Apr 2019 14:02:25 +0800</pubDate>
      
      <guid>https://bwaycer.github.io/zhpect/godoc.org/golang.org/x/net/</guid>
      <description>net:  golang.org/x/net  Directories &amp;para;    Path Synopsis     bpf Package bpf implements marshaling and unmarshaling of programs for the Berkeley Packet Filter virtual machine, and provides a Go implementation of the virtual machine.   context Package context defines the Context type, which carries deadlines, cancelation signals, and other request-scoped values across API boundaries and between processes.   context/ctxhttp Package ctxhttp provides helper functions for performing context-aware HTTP requests.</description>
    </item>
    
    <item>
      <title>websocket - GoDoc</title>
      <link>https://bwaycer.github.io/zhpect/godoc.org/golang.org/x/net/websocket/</link>
      <pubDate>Thu, 18 Apr 2019 11:28:11 +0800</pubDate>
      
      <guid>https://bwaycer.github.io/zhpect/godoc.org/golang.org/x/net/websocket/</guid>
      <description>net:  golang.org/x/net/websocket Index | Examples | Files   package websocket  import &#34;golang.org/x/net/websocket&#34; Package websocket implements a client and server for the WebSocket protocol as specified in RFC 6455 . This package currently lacks some features found in an alternative and more actively maintained WebSocket package:
https://godoc.org/github.com/gorilla/websocket Index &amp;para;   Constants   Variables   func Origin(config *Config, req *http.Request) (*url.URL, error)   type Addr    func (addr *Addr) Network() string    type Codec    func (cd Codec) Receive(ws *Conn, v interface{}) (err error)   func (cd Codec) Send(ws *Conn, v interface{}) (err error)    type Config    func NewConfig(server, origin string) (config *Config, err error)    type Conn    func Dial(url_, protocol, origin string) (ws *Conn, err error)   func DialConfig(config *Config) (ws *Conn, err error)   func NewClient(config *Config, rwc io.</description>
    </item>
    
  </channel>
</rss>